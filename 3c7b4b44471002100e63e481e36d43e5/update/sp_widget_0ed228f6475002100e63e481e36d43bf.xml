<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, spUtil) {
	/* widget controller */
	var c = this;
	  
	////  new logic /////
	var give_up_array=JSON.parse(localStorage.getItem('give_up_list'));
	var team_id=localStorage.getItem('user_id');
	var it=localStorage.getItem('it');
	
	c.btn_show=false
	if(give_up_array[it]==team_id) 
	{
		c.btn_show=true;
	}
	
	
	// recordWatch() for bid
	spUtil.recordWatch($scope, "x_540166_apl_apl_player_table", "numberISNOTEMPTY", function(name) {
		localStorage.setItem('it',(it+1)%give_up_array.length);
		window.location.reload();
	});
	
	// recordWatch() for giveup
	spUtil.recordWatch($scope, "x_540166_apl_team_table", "numberISNOTEMPTY", function(name) {
		var newArray = give_up_array.slice(0, it).concat(give_up_array.slice(it + 1));
		localStorage.setItem('give_up_list', JSON.stringify(newArray));
		
		if(give_up_array.length == 1)
		{
			sold_func();
		}
		
		window.location.reload();
		
	});

	c.placeBid = function(player) {
		
		var n = 500;
		c.data.newValue = parseInt(c.data.list[0].value) + parseInt("500");
		c.data.team_id = localStorage.getItem('user_id');
		c.data.action = "bid";
		c.server.update();
	}
	
	c.giveup = function(player) {
		c.data.team_id = localStorage.getItem('user_id');
		c.data.action = "giveup";
		c.server.update();
	}

	function sold_func(){
		c.data.action = "sold";
		c.server.update();
	}

};]]></client_script>
        <controller_as>c</controller_as>
        <css>/* Player Card Container */
.player-card {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  gap: 15px; /* Increased vertical spacing between containers */
  padding: 15px; /* Increased padding for the card */
  border: 2px solid #ddd; /* Add a subtle border */
  border-radius: 10px; /* Add rounded corners */
  
}

/* First Row (30%) */
.player-card .first-row {
  display: flex;
  flex-wrap: nowrap;
  height: 30%;
  gap: 15px; /* Increased spacing between containers in the first row */
}

/* Container 1 - Player Profile Pic */
.first-row .container1 {
  flex: 30%;
  position: relative; /* Added position relative for positioning the overlay text */
  overflow: hidden; /* Hide overflow for rounded corners */
  border: 2px solid #ddd; /* Add a border to container1 */
  border-radius: 10px; /* Add rounded corners */
}

/* Fixed size for images based on container1 size */
.container1 img {
  width: 100%;
  height: 100%;
  object-fit: cover; /* Adjust the object-fit property as needed */
  border-radius: 10px; /* Add rounded corners to the image */
  
}

/* Overlay text for image */
.container1 .overlay-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #fff;
  font-size: 16px; /* Adjust the font size of the overlay text */
}

/* Container 2 - Player Name and Age */
.first-row .container2 {
  flex: 30%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 18px; /* Adjust the font size for player name and age */
   overflow: hidden; /* Hide overflow for rounded corners */
  border: 2px solid #ddd; /* Add a border to container1 */
  border-radius: 10px; /* Add rounded corners */
}

/* Container 3 - Base Price */
.first-row .container3 {
  flex: 40%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 18px; /* Adjust the font size for base price */
   overflow: hidden; /* Hide overflow for rounded corners */
  border: 2px solid #ddd; /* Add a border to container1 */
  border-radius: 10px; /* Add rounded corners */
  color: #007965;
}

/* Second Row (70%) */
.player-card .second-row {
  display: flex;
  height: 70%;
  gap: 15px; /* Increased spacing between containers in the second row */
}

/* Container 4 - Other Statistics */
.second-row .container4 {
  flex: 70%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 18px; /* Adjust the font size for statistics */
   overflow: hidden; /* Hide overflow for rounded corners */
  border: 2px solid #ddd; /* Add a border to container1 */
  border-radius: 10px; /* Add rounded corners */
}

/* Container 5 - Buttons (Bid, Pass, Give Up) */
.second-row .container5 {
  flex: 30%;
  display: flex;
  flex-direction: column;
  justify-content: center;
   overflow: hidden; /* Hide overflow for rounded corners */
  border: 2px solid #ddd; /* Add a border to container1 */
  border-radius: 10px; /* Add rounded corners */
  align-items: center;
  
}

/* Styling for Buttons */
.container5 button {
  margin: 9px; /* Increased margin for buttons */
  padding: 15px; /* Increased padding for buttons */
  font-size: 16px; /* Adjust the font size for buttons */
  background-color: #3498db;
  color: #fff;
  border: none;
  cursor: pointer;
  border-radius: 8px; /* Add rounded corners to buttons */
  background-color: #00AF91;
}



.container5 button:hover {
  background-color: #2980b9;
  
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>h_apl_player_card</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>h_apl_player_card</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	var id;
	var player_ids=[];
	var player_table = new GlideRecord('x_540166_apl_apl_player_table');
	player_table.orderBy('number');
	player_table.query();

	while(player_table.next()) {
		player_ids.push(player_table.getValue('sys_id'));
	}
	id = player_ids[player_ids.length-1];
	//console.log(player_ids);

	// fetch record for that player
	var gr = new GlideRecord("x_540166_apl_apl_player_table");
	gr.addQuery('sys_id', id);
	gr.orderBy('number');
	gr.query(); 

	data.list = [];
	var obj = {};

	while(gr.next()) {
		//data.obj = {};
		obj.number = gr.getValue('number');
		obj.name = gr.getValue('u_name');
		obj.player_image = gr.getValue('player_image');
		obj.age = gr.getValue('u_age');
		obj.category = gr.getValue('u_category');
		obj.value = gr.getValue('u_value');
		obj.interested = gr.getValue('interested');
	} 


	// fetch stats for that player
	var stat = new GlideRecord("x_540166_apl_player_stats");
	stat.addQuery('u_reference_15', id);
	stat.query();
	while(stat.next()) {
		obj.matches = stat.getValue('u_matches_1');
		obj.innings = stat.getValue('u_innings_3');
		obj.runs = stat.getValue('u_runs_2');
		obj.strike_rate = stat.getValue('u_sr_7');
		obj.fifties = stat.getValue('u_fifties_10');
		obj.centuries = stat.getValue('u_centuries_9');
		obj.wickets = stat.getValue('u_wickets_4');
		obj.three_wicket = stat.getValue('u_3wh_15');
		obj.five_wicket = stat.getValue('u_integer_11');
		obj.average = stat.getValue('u_avg_5');
		obj.highest_score = stat.getValue('u_high_14');
		obj.bowling_best_fig = stat.getValue('u_bestbowl_12');
		data.list.push(obj);
	}

	if(input) {
		if(input.action == "bid"){
			var player = new GlideRecord('x_540166_apl_apl_player_table');
			player.addQuery('sys_id', id);
			player.query();
			
			// doubt ?????   var a = gr.getValue('u_name');
			
			if (player.next()) {
				player.setValue('u_value', input.newValue);
				player.update();
			}
			var bidlog = new GlideRecord('x_540166_apl_apl_bidlog_table');
			bidlog.initialize();
			bidlog.setValue('current_profile_pic', obj.player_image);
			bidlog.setValue('u_reference_1', input.team_id);
			bidlog.setValue('u_current_bid', input.newValue);
			bidlog.insert();
		}
		else if (input.action=="giveup"){
			var team = new GlideRecord('x_540166_apl_team_table');
			team.addQuery('sys_id', input.team_id);
			team.query();
			if (team.next()) {
				team.setValue('interested', false);
				team.update();
			}
		}
		else if(input.action=="sold")
		{
			//// opening tables
			var open_team_data = new GlideRecord('x_540166_apl_team_table');
			open_team_data.query();
			var o1 = open_team_data.getValue('team_purse');
			var o2 = open_team_data.getValue('team_players');
			
			var open_player_data = new GlideRecord('x_540166_apl_apl_player_table');
			open_player_data.intialize();
			
			var open_bid_data = new GlideRecord('x_540166_apl_apl_bidlog_table');
			open_bid_data.intialize();
			
			//// setting tables
			var set_team_data = new GlideRecord('x_540166_apl_team_table');
			set_team_data.intialize();
			set_team_data.setValue('team_purse', );
			set_team_data.setValue('team_players', (o2+1));
			
			var set_player_data = new GlideRecord('x_540166_apl_apl_player_table');
			player_data.intialize();
			
			var set_bid_data = new GlideRecord('x_540166_apl_apl_bidlog_table');
			team_data.intialize();
		}
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>harshraj</sys_created_by>
        <sys_created_on>2024-02-15 06:18:55</sys_created_on>
        <sys_id>0ed228f6475002100e63e481e36d43bf</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>h_apl_player_card</sys_name>
        <sys_package display_value="APL " source="x_540166_apl">3c7b4b44471002100e63e481e36d43e5</sys_package>
        <sys_policy/>
        <sys_scope display_value="APL ">3c7b4b44471002100e63e481e36d43e5</sys_scope>
        <sys_update_name>sp_widget_0ed228f6475002100e63e481e36d43bf</sys_update_name>
        <sys_updated_by>harshraj</sys_updated_by>
        <sys_updated_on>2024-02-15 07:14:30</sys_updated_on>
        <template><![CDATA[<div ng-repeat="player in data.list">
  <div class="player-card">
    <div class="first-row">
      <div class="container1">
        <img ng-src="{{ ::player.player_image + '.iix' }}" alt="Player Image" class="img-fluid">
      </div>
      <div class="container2">
        <h2>{{ player.name }}</h2>
        <p>Age: {{ player.age }}</p>
      </div>
      <div class="container3">
        <p>Price: {{ player.value }}</p>
      </div>
    </div>
    <div class="second-row">
      <div class="container4">
        <p>Matches: {{ player.matches }}</p>
        <p>Runs: {{ player.runs }}</p>
        <p>Wickets: {{ player.wickets }}</p>
        <p>Average: {{ player.average }}</p>
        <p>Category: {{ player.category }}</p>
      </div>
      <div class="container5" ng-show="c.btn_show">
        <div class="twobut">
          <button ng-click="c.placeBid(player)">
            Bid
          </button>
          <!--<button ng-click="passOnBid(player)">Pass</button>-->
        </div>
        <button ng-click="c.giveup(player)">
          Give up
        </button>
      </div>
    </div>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
