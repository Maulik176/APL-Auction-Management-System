<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function ($scope, spModal, spUtil, $location, $timeout) {
  var c = this;

  c.login = function () {
    c.data.x = c.ltname;
    c.data.y = c.ltpass;

    c.server.update().then(function (r) {
			 localStorage.setItem('user_id', r.user_id);
      if (r.loginstatus) {
				localStorage.setItem("it", 0);
        localStorage.setItem("teams_list", JSON.stringify(c.data.teams_array));
        localStorage.setItem("give_up_list", JSON.stringify(c.data.give_up));
				

				// Client Script
				c.server.get({
					action: 'checkAllTeamsLoggedIn'
				}).then(function (result) {
					console.log("Raw result:", result);
					console.log("Type of result:", typeof result);

					// Ensure you are logging the correct information
					console.log("Boolean result:", result === true);

					if (result === true) {
						console.log("result is true");
						$timeout(function () {
							spUtil.addInfoMessage("Login successful");
							$location.path('/apl').search('id', 'apl_landing_page').search('team_id', r.user_id);
						}, 1000);
					} else {
						spUtil.addInfoMessage("Waiting for others to join.");
					}
				});

				
      }
    });
  }

	// ... (rest of the code)
	c.signup = function () {
    spModal.open({
      title: 'New Registration',
      widget: "apl_reg_page",
    }).then(function (r) {
		alert("Hello");
			console.log("in login widget" + r.data.team_exists);
			//window.location.reload();
			
			//signup redirect logic
			/*$timeout(function () {
        $location.path('/apl').search('id', 'apl_landing_page').search('team_id', userId);
      }, 1000); // Adjust the delay as needed */
			
    });
		
  }
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>*{
  font-family: 'Poppins', sans-serif;
}

body {
      font-family: 'Poppins', sans-serif;
      background-color: #f2f2f2;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
       height: 100vh;
    }
.login-container {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      width: 300px;
  margin: auto;
      
    }
.login-container h2 {
      margin-top: 0;
      text-align: center;
  		color: #007965;
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-group label {
      display: block;
      font-weight: bold;
      margin-bottom: 5px;
      color: #007965;
    }
    .form-group input {
      //width: 100%;
      width: calc(100% - 16px); /* Adjusted width for better appearance */
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }
    .btn-container {
      text-align: center;
    }
    .btn-container button {
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      background-color: #007965;
      color: #fff;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    .btn-container button:hover {
      background-color: #00af91 ;
    }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>m_apl_login</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>m_apl_login</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	data.loginstatus = false;
	data.user_id = '-1';
	if(input)
	{
		var gr=new GlideRecord('x_540166_apl_team_table');
		gr.addQuery('team_name', input.x);
		gr.query();
		
		while(gr.next())
		{
			if(gr.getValue('team_name')==input.x)
			{
				if(gr.getValue('password')==input.y)
				{
					console.log("success");
					data.loginstatus = true;
					data.user_id=gr.getValue('sys_id');
				}
				else
				{
					console.log("failed");
					data.loginstatus = false;
				}	
			}
		}
	}
	
	//fetching teams data
	data.teams_array=[];
	data.give_up=[];
	var teamData = new GlideRecord("x_540166_apl_team_table");
	teamData.orderBy('number');
	teamData.query(); 
	while(teamData.next())
	{
		data.teams_array.push(teamData.getValue('sys_id'));
		data.give_up.push(teamData.getValue('sys_id'));
	}
	
	if (data.loginstatus) {
		var checkLoggedInTeams = new CheckLoggedInTeams();

		// Check if the team is already logged in
		checkLoggedInTeams.checkIfTeamLoggedIn(data.user_id, function(isTeamLoggedIn) {
			gs.info('Maulik check if the team is logged in? ' + isTeamLoggedIn);

			if (!isTeamLoggedIn) {
				// Team is not logged in, so log them in
				logInTeam(data.user_id);
				gs.info('Team with sys_id ' + data.user_id + ' is now logged in.');
			} 
			// Team is already logged in, check if all other teams have logged in
			checkLoggedInTeams.checkAllTeamsLoggedIn(function(allTeamsLoggedIn) {
				gs.info('Maulik check if all teams are logged in? ' + allTeamsLoggedIn);

				if (allTeamsLoggedIn) {
					// All teams have logged in, proceed with further actions
					gs.info('All teams have logged in. Proceeding with further actions...');
				} else {
					// Not all teams have logged in, wait for others
					gs.info('Waiting for other teams to join.');
				}
			});

		});
	}

})();

function logInTeam(user_id) {
  // Log in the team in the 'x_540166_apl_apl_check_logged_in_teams' table
  var logInTeams = new GlideRecord('x_540166_apl_apl_check_logged_in_teams');
  logInTeams.addQuery('team_id', user_id);
  logInTeams.query();

	if (!logInTeams.next()) {
		// If the record doesn't exist, insert it
		var newLogInTeam = new GlideRecord('x_540166_apl_apl_check_logged_in_teams');
		newLogInTeam.initialize();
		newLogInTeam.team_id = user_id;
		newLogInTeam.logged_in = true;
		newLogInTeam.insert();
  } else {
    gs.info('Team with sys_id ' + user_id + ' is already logged in.');
  }
}
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>maulik</sys_created_by>
        <sys_created_on>2024-02-29 05:39:43</sys_created_on>
        <sys_id>6420e01f472002100e63e481e36d437d</sys_id>
        <sys_mod_count>27</sys_mod_count>
        <sys_name>m_apl_login</sys_name>
        <sys_package display_value="APL " source="x_540166_apl">3c7b4b44471002100e63e481e36d43e5</sys_package>
        <sys_policy/>
        <sys_scope display_value="APL ">3c7b4b44471002100e63e481e36d43e5</sys_scope>
        <sys_update_name>sp_widget_6420e01f472002100e63e481e36d437d</sys_update_name>
        <sys_updated_by>maulik</sys_updated_by>
        <sys_updated_on>2024-03-01 06:10:44</sys_updated_on>
        <template><![CDATA[<div class="login-container">
    <h2>Login</h2>
    <form id="login-form">
      <div class="form-group">
        <label for="team-name">Team Name</label>
        <input type="text" id="team-name" name="team-name" ng-model="c.ltname" required>
      </div>
      <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" name="password" ng-model="c.ltpass" required>
      </div>
      <div class="btn-container">
        <button type="submit" ng-click="c.login()">Login</button>
         <!--<button type="button" ng-click="c.login()">Login</button>-->
        <button type="button" ng-click="c.signup()">Sign Up</button>
      </div>
    </form>
  </div>]]></template>
    </sp_widget>
</record_update>
